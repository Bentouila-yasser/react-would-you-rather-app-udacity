{"version":3,"sources":["utils/_DATA.js","utils/api.js","actions/users.js","actions/questions.js","actions/shared.js","actions/authedUser.js","components/Login.js","components/QuestionPoll.js","components/Dashboard.js","components/SaveQuestionAnswer.js","components/ShowQuestionPoll.js","components/QuestionPage.js","components/CreateQuestion.js","components/UserState.js","components/LeaderBoard.js","components/Nav.js","utils/ProtectedRoute.js","components/NotFound.js","components/App.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","middleware/checker.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","saveTheQuestionAnswer","info","qid","answer","_saveQuestionAnswer","RECEIVE_USERS","RECEIVE_QUESTIONS","SAVE_QUESTION_ANSWER","SAVE_QUESTION","handleSaveQuestion","dispatch","questionInfo","showLoading","then","type","saveQuestion","hideLoading","handleSaveQuestionAnswer","console","log","saveQuestionAnswer","handleInitialData","all","receiveUsers","receiveQuestions","SET_AUTHED_USER","CLEAR_AUTHED_USER","setAuthedUser","Login","state","selectedUserId","toHome","onChangeUser","e","target","value","setState","handleSubmit","props","this","selected","history","avatar","prevLocation","location","to","push","className","src","alt","onChange","disabled","Object","keys","map","key","onClick","Component","withRouter","connect","QuestionPoll","Dashboard","showAnswered","handleChange","sortedQuestions","filter","contains","indexOf","sort","a","b","SaveQuestionAnswer","selectedOption","onValueChange","preventDefault","onSubmit","checked","ShowQuestionPoll","optionOneLength","length","optionTwoLength","votesLength","optionOnePercentage","optionTwoPercentage","QuestionPage","questionsAnswered","answered","from","match","params","CreateQuestion","optionOnehandleChange","optionTwohandleChange","placeholder","UserState","user","answeredQuestions","entries","createdQuestions","score","Leaderboard","sortedUserArray","loggedIn","pure","exact","activeClassName","component","rest","pathname","render","NotFound","App","path","LeaderBoard","combineReducers","action","loadingBar","loadingBarReducer","logger","store","next","group","returnValue","getState","groupEnd","applyMiddleware","thunk","alert","createStore","reducer","middleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.161ae555.chunk.js","sourcesContent":["let users = {\n  sarahedo: {\n    id: 'sarahedo',\n    name: 'Sarah Edo',\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/sarah.jpg',\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionOne',\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n  },\n  tylermcginnis: {\n    id: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/tyler.jpg',\n    answers: {\n      \"vthrdm985a262al8qx3do\": 'optionOne',\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n  },\n  johndoe: {\n    id: 'johndoe',\n    name: 'John Doe',\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/dan.jpg',\n    answers: {\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionOne'\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n  }\n}\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory'\n    }\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillian'\n    }\n  },\n  \"am8ehyc8byjqgar0jgpub9\": {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic'\n    }\n  },\n  \"loxhs1bqm25b708cmbf3g\": {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer'\n    }\n  },\n  \"vthrdm985a262al8qx3do\": {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500'\n    }\n  },\n  \"xj352vofupe1dqz9emx13r\": {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift'\n    }\n  },\n}\n\nfunction generateUID () {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...users}), 1000)\n  })\n}\n\nexport function _getQuestions () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...questions}), 1000)\n  })\n}\n\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    }\n  }\n}\n\nexport function _saveQuestion (question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question)\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      }\n      \n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\n        }\n      }\n\n      res(formattedQuestion)\n    }, 1000)\n  })\n}\n\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\n  return new Promise((res) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer,\n          },\n        },\n      };\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser]),\n          },\n        },\n      };\n\n      res();\n    }, 500);\n  });\n}\n","import {\r\n    _getUsers,\r\n    _getQuestions,\r\n    _saveQuestionAnswer,\r\n    _saveQuestion,\r\n  } from './_DATA.js'\r\n  \r\n  export function getInitialData () {\r\n    return Promise.all([\r\n      _getUsers(),\r\n      _getQuestions(),\r\n    ]).then(([users, questions]) => ({\r\n      users,\r\n      questions,\r\n    }))\r\n  }\r\n  \r\n  export function saveTheQuestionAnswer (info) {\r\n    return _saveQuestionAnswer(info)\r\n  }\r\n  \r\n  export function saveTheQuestion (info) {\r\n    return _saveQuestion(info)\r\n  }","export const RECEIVE_USERS = 'RECEIVE_USERS'\r\n\r\nexport function receiveUsers (users) {\r\n  return {\r\n    type: RECEIVE_USERS,\r\n    users,\r\n  }\r\n}","import { saveTheQuestion, saveTheQuestionAnswer } from '../utils/api'\r\nimport { showLoading, hideLoading } from 'react-redux-loading-bar'\r\n\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\r\nexport const SAVE_QUESTION_ANSWER = 'SAVE_QUESTION_ANSWER'\r\nexport const SAVE_QUESTION = 'SAVE_QUESTION'\r\n\r\nfunction saveQuestion (question) {\r\n  return {\r\n    type: SAVE_QUESTION,\r\n    question,\r\n  }\r\n}\r\n\r\nexport function handleSaveQuestion (optionOneText, optionTwoText, authedUser) {\r\n  return function(dispatch) {\r\n\r\n    const questionInfo = {\r\n      optionOneText,\r\n      optionTwoText,\r\n      author: authedUser,\r\n    };\r\n\r\n    dispatch(showLoading())\r\n\r\n    return saveTheQuestion(questionInfo)\r\n      .then((question) => dispatch(saveQuestion(question)))\r\n      .then(() => dispatch(hideLoading()))\r\n  }\r\n}\r\n\r\nexport function receiveQuestions(questions) {\r\n  return {\r\n    type: RECEIVE_QUESTIONS,\r\n    questions,\r\n  };\r\n}\r\n\r\nfunction saveQuestionAnswer ({ authedUser, qid, answer }) {\r\n  return {\r\n    type: SAVE_QUESTION_ANSWER,\r\n    authedUser,\r\n    qid,\r\n    answer\r\n  }\r\n}\r\n\r\nexport function handleSaveQuestionAnswer ( info ) {\r\n  return function( dispatch ) {\r\n    console.log(`the fucking authedUser are ${info}`)\r\n    dispatch(showLoading())\r\n\r\n    return saveTheQuestionAnswer(info)\r\n      .then(function() { dispatch((saveQuestionAnswer(info))) })\r\n      .then(() => dispatch(hideLoading()))\r\n  }\r\n}","import { getInitialData } from '../utils/api'\r\nimport { receiveUsers } from './users'\r\nimport { receiveQuestions } from './questions'\r\nimport { showLoading, hideLoading } from 'react-redux-loading-bar'\r\n\r\nexport function handleInitialData() {\r\n  return (dispatch) => {\r\n    dispatch(showLoading());\r\n    return getInitialData().then(({ users, questions }) => {\r\n      dispatch(receiveUsers(users));\r\n      dispatch(receiveQuestions(questions));\r\n      dispatch(hideLoading());\r\n    });\r\n  };\r\n}","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\r\nexport const CLEAR_AUTHED_USER = 'CLEAR_AUTHED_USER'\r\n\r\nexport function setAuthedUser (id) {\r\n  return {\r\n    type: SET_AUTHED_USER,\r\n    id,\r\n  }\r\n}\r\n\r\nexport function clearAuthedUser ( id ) {\r\n  return {\r\n    type: CLEAR_AUTHED_USER,\r\n    id,\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setAuthedUser, clearAuthedUser } from '../actions/authedUser';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    selectedUserId: null,\r\n    toHome: false,\r\n  }\r\n\r\n  onChangeUser = (e) => {\r\n    const selectedUserId = e.target.value\r\n\r\n    this.setState({\r\n      selectedUserId\r\n    });\r\n}\r\n\r\n  handleSubmit = (e) => {\r\n    const { selectedUserId } = this.state;\r\n    const { dispatch } = this.props;\r\n\r\n    dispatch(setAuthedUser(selectedUserId));\r\n\r\n    this.setState({\r\n      toHome: true,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(clearAuthedUser())\r\n  }\r\n\r\n  render() {\r\n    const { selectedUserId, toHome } = this.state;\r\n    const selected = selectedUserId ? selectedUserId : -1;\r\n    const { history, users } = this.props;\r\n    const avatar = selectedUserId ? users[selectedUserId].avatarURL : 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png';\r\n\r\n\r\n    if (toHome === true) {\r\n        const prevLocation = history.location.state;\r\n        if (prevLocation != null) {\r\n            return <Redirect to={prevLocation} push={true} />\r\n        }\r\n        return <Redirect to='/' />\r\n      }\r\n    return (\r\n      <div>\r\n        <h3 className='center'>Welcome to the Would You Rather App!</h3>\r\n        <div className='login-box'>\r\n            <span>Please select a user</span>\r\n            <span>Sign in</span>\r\n          <div className='user-select'>\r\n           <img\r\n              src={avatar}\r\n              alt={`Avatar of ${selectedUserId}`}\r\n              className='avatar'\r\n            />\r\n            <select value={selected} onChange={(e) => this.onChangeUser(e)}>\r\n              <option value={-1} disabled>Select user...</option>\r\n              {Object.keys(users).map((key) => {\r\n                    return (\r\n                        <option value={users[key].id} key={key}>{users[key].id}</option>\r\n                      );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <button\r\n            className='btn'\r\n            disabled={selectedUserId === null}\r\n            onClick={(e) => this.handleSubmit(e)}\r\n          >\r\n            Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ users, questions }) {\r\n  console.log(`the questions are ${questions}`)\r\n  return {\r\n    users,\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Login))","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nclass QuestionPoll extends Component {\r\n \r\n  render() {\r\n    const { question, users } = this.props;\r\n    const avatar = users ? users[question.author].avatarURL : 'placeholder.jpg';\r\n    if (question === null) {\r\n        return <p>This Question doesn't existd , ERROR 404</p>\r\n    }\r\n    return (\r\n      <Link to={`/questions/${question.id}`} className='questionpoll'>\r\n        <dive className='questionpollinside'>\r\n          <p>{`${users[question.author].name} asks:`}</p>\r\n          <img\r\n            src={avatar}\r\n            alt={`Avatar of ${question.author}`}\r\n            className='avatar'\r\n          />\r\n        </dive>\r\n        <div className='questionpollinside'>\r\n          <span>Would you rather</span>\r\n          <span>{question.optionOne.text}</span>\r\n          <span>OR</span>\r\n          <span>{question.optionTwo.text}</span>\r\n        </div>\r\n      </Link>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps ({ users }){\r\n  return {\r\n    users,\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(QuestionPoll))","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport QuestionPoll from './QuestionPoll'\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        showAnswered: false,\r\n      }\r\n\r\n    handleChange = (answer) => {\r\n        this.setState(() => ({\r\n            showAnswered: answer\r\n        }))\r\n    }\r\n\r\n  render() {\r\n    const { showAnswered } = this.state;\r\n    const { authedUser, questions } = this.props;\r\n    const questionsArray = Object.keys(questions).map((key) => questions[key]);\r\n    const filteredQuestions = questionsArray.filter(function(question) {\r\n      const contains = (\r\n        question.optionOne.votes.indexOf(authedUser) > -1 ||\r\n        question.optionTwo.votes.indexOf(authedUser) > -1\r\n      );\r\n      return showAnswered ? contains : !contains;\r\n    });\r\n    const sortedQuestions = filteredQuestions.sort((a, b) => b.timestamp - a.timestamp);\r\n\r\n    return (\r\n      <div className='dashboard'>\r\n        <h3 className='center'>Dashboard</h3>\r\n        <div className='btn-group'>\r\n          <button \r\n            className={!showAnswered ? 'btn-lft active' : 'btn-lft'} \r\n            onClick={(e) => this.handleChange(false)}\r\n          >\r\n            Unanswered Question\r\n          </button>\r\n          <button \r\n            className={showAnswered ? 'btn-rght active' : 'btn-rght'} \r\n            onClick={(e) => this.handleChange(true)}\r\n          >\r\n            Answered Question\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <ul className='dashboard-list'>\r\n            {sortedQuestions.map((question) => (\r\n                <li key={question.id}>\r\n                  <QuestionPoll question={question} />\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions, users }) {\r\n  return {\r\n    authedUser,\r\n    questions,\r\n    users,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleSaveQuestionAnswer } from '../actions/questions'\r\n\r\nclass SaveQuestionAnswer extends Component {\r\n  state = {\r\n    selectedOption: ''\r\n  }\r\n\r\n  onValueChange = (e) => {\r\n    const selectedOption = e.target.value\r\n\r\n    this.setState({\r\n      selectedOption\r\n    });\r\n  }\r\n  \r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const { selectedOption } = this.state\r\n    const { dispatch, authedUser, question } = this.props\r\n    console.log(`the selectedOption is ${selectedOption} and the authedUser is ${authedUser} and the questionsId is ${question.id}`)\r\n    dispatch(handleSaveQuestionAnswer({ authedUser, qid: question.id, answer: selectedOption }))\r\n\r\n    this.setState(() => ({\r\n      selectedOption: ''\r\n    }))\r\n  }\r\n  render() {\r\n    const { selectedOption } = this.state\r\n    const { users, question } = this.props\r\n    const avatar = question ? users[question.author].avatarURL : 'placeholder.jpg';\r\n\r\n    return (\r\n      <div className='questionanswer'>\r\n        <div>\r\n          <p>{`${users[question.author].name} asks:`}</p>\r\n          <img\r\n              src={avatar}\r\n              alt={`Avatar of ${users[question.author].name}`}\r\n              className='avatar'\r\n          />\r\n        </div>\r\n        <div>\r\n          <form onSubmit={this.handleSubmit} className='formright'>\r\n            <span>Would you rather</span>\r\n            <div className=\"radio\">\r\n              <label>\r\n                  <input\r\n                  type=\"radio\"\r\n                  value=\"optionOne\"\r\n                  checked={this.state.selectedOption === \"optionOne\"}\r\n                  onChange={this.onValueChange}\r\n                  />\r\n                  {question.optionOne.text}\r\n              </label>\r\n            </div>\r\n            <span>OR</span>\r\n            <div className=\"radio\">\r\n              <label>\r\n                  <input\r\n                  type=\"radio\"\r\n                  value=\"optionTwo\"\r\n                  checked={this.state.selectedOption === \"optionTwo\"}\r\n                  onChange={this.onValueChange}\r\n                  />\r\n                  {question.optionTwo.text}\r\n              </label>\r\n            </div>\r\n            <button \r\n              className=\"btn btn-default\" \r\n              type=\"submit\"\r\n              disabled={selectedOption === ''}>\r\n                Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps ({ authedUser, users, questions}, { id }) {\r\n  \r\n    return {\r\n      authedUser,\r\n      users,\r\n      question: questions[id],\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SaveQuestionAnswer)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass ShowQuestionPoll extends Component {\r\n\r\n  render() {\r\n    const { users, questions, id, authedUser } = this.props\r\n    const question = questions[id]\r\n    const avatar = users[question.author].avatarURL\r\n    const optionOneLength = question.optionOne.votes.length\r\n    const optionTwoLength = question.optionTwo.votes.length\r\n    const votesLength = optionOneLength + optionTwoLength\r\n    const optionOnePercentage = (optionOneLength / votesLength)*100\r\n    const optionTwoPercentage = (optionTwoLength / votesLength)*100\r\n    return (\r\n      <div className='question'>\r\n        <div>\r\n          <p>{`${users[question.author].name} asks:`}</p>\r\n          <img\r\n            src={avatar}\r\n            alt={`Avatar of ${users[question.author].name}`}\r\n            className='avatar'\r\n          />\r\n        </div>\r\n        <div>\r\n          <span>{question.optionOne.text}</span>\r\n          <span>with {optionOnePercentage}% of votes</span>\r\n          <span>{optionOneLength} out of {votesLength} votes </span>\r\n          {questions[id].optionOne.votes.indexOf(authedUser) >= 0 \r\n            ? <span>you chosed that option</span>\r\n            : null\r\n          }\r\n          <span>OR</span>\r\n          <span>{question.optionTwo.text}</span>\r\n          <span>with {optionTwoPercentage}% of votes</span>\r\n          <span>{optionTwoLength} out of {votesLength} votes </span>\r\n          {questions[id].optionTwo.votes.indexOf(authedUser) >= 0 \r\n            ? <span>you chosed that option</span>\r\n            : null\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps ({users, authedUser, questions}, { id }) {\r\n    return {\r\n      id,\r\n      users,\r\n      questions,\r\n      authedUser,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShowQuestionPoll)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport SaveQuestionAnswer from './SaveQuestionAnswer'\r\nimport ShowQuestionPoll from './ShowQuestionPoll'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass QuestionPage extends Component {\r\n\r\n  render() {\r\n    const { id, users,questions, authedUser } = this.props\r\n    const questionsAnswered = Object.keys(users[authedUser].answers)\r\n    console.log(questionsAnswered)\r\n    const answered = questionsAnswered.indexOf(id) > -1 ? true : false;\r\n    if(questions[id] == null) {\r\n      return <Redirect from='*' to='/not-found' />\r\n    }\r\n    return (\r\n        <div>\r\n            {answered === false\r\n            ?<div><SaveQuestionAnswer id={id} /></div>\r\n            :<div><ShowQuestionPoll id={id} /></div>}\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps ({ authedUser, users ,questions }, props) {\r\n  const { id } = props.match.params\r\n\r\n  return {\r\n    id,\r\n    questions,\r\n    users,\r\n    authedUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionPage)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleSaveQuestion } from '../actions/questions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateQuestion extends Component {\r\n  state = {\r\n    optionOneText: '',\r\n    optionTwoText: '',\r\n    toHome: false\r\n  }\r\n\r\n  optionOnehandleChange = (e) => {\r\n    const optionOneText = e.target.value\r\n\r\n    this.setState({\r\n      optionOneText\r\n    });\r\n  }\r\n\r\n  optionTwohandleChange = (e) => {\r\n    const optionTwoText = e.target.value\r\n\r\n    this.setState({\r\n      optionTwoText\r\n    });\r\n  }\r\n  \r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const { optionOneText, optionTwoText } = this.state\r\n    const { dispatch, authedUser } = this.props\r\n\r\n    dispatch(handleSaveQuestion(optionOneText, optionTwoText, authedUser))\r\n\r\n    return this.setState(() => ({\r\n        optionOneText: '',\r\n        optionTwoText: '',\r\n        toHome: true,\r\n    }))\r\n  }\r\n  render() {\r\n    const { optionOneText, optionTwoText, toHome } = this.state\r\n\r\n    if (toHome === true) {\r\n      return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3 className='center'>Create New Question</h3>\r\n        <form onSubmit={this.handleSubmit} className='new-question'>\r\n          <span>Complete the question :</span>\r\n          <span>Would you rather ...</span>\r\n          <div className=\"textarea\">\r\n            <input\r\n              placeholder=\"Enter Option One Text Here\"\r\n              type=\"text\"\r\n              value={optionOneText}\r\n              onChange={this.optionOnehandleChange}\r\n            />\r\n          </div>\r\n          <span>OR</span>\r\n          <div className=\"textarea\">\r\n            <input\r\n              placeholder=\"Enter Option Two Text Here\"\r\n              type=\"text\"\r\n              value={optionTwoText}\r\n              onChange={this.optionTwohandleChange}\r\n            />\r\n          </div>\r\n          <button \r\n            className=\"btn btn-default\" \r\n            type=\"submit\"\r\n            disabled={(optionOneText.length * optionTwoText.length) === 0}>\r\n              Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps ({users, questions, authedUser}, { id }) {\r\n    const question = questions[id]\r\n  \r\n    return {\r\n      authedUser,\r\n      users,\r\n      question\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateQuestion)","import React from 'react'\r\n\r\nexport default function UserState(props) {\r\n    const { user} = props;\r\n    const avatar = user ? user.avatarURL : 'placeholder.jpg';\r\n    const answeredQuestions = Object.entries(user.answers).length\r\n    const createdQuestions = user.questions.length\r\n    const score = answeredQuestions + createdQuestions\r\n    return (\r\n        <div className='userstate'>\r\n            <div>\r\n                <p>{user.name}</p>\r\n                <img\r\n                    src={avatar}\r\n                    alt={`Avatar of ${user.name}`}\r\n                    className='avatar'\r\n                />\r\n            </div>\r\n            <div>\r\n                <span>Answered questions: {answeredQuestions}</span>\r\n                <span>Created questions:{createdQuestions}</span>\r\n                <span>Score: {score}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport UserState from './UserState'\r\n\r\nclass Leaderboard extends Component {\r\n  \r\n  render() {\r\n  const { users } = this.props;\r\n  const userArray = Object.keys(users).map((key) => users[key]);\r\n  const sortedUserArray = userArray.sort((a, b) => {\r\n    return Object.keys(b.answers).length + b.questions.length - Object.keys(a.answers).length - a.questions.length\r\n  })\r\n\r\n    return (\r\n      <div className='board'>\r\n        <h3 className='center'>Leaderboard</h3>\r\n        <ul className='board-list'>\r\n          {sortedUserArray.map((user) => (\r\n            <li key={user.id}>\r\n              <UserState user={user} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n  return {\r\n    users,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Leaderboard)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction Nav(props) {\r\n    const { authedUser, users, loggedIn} = props\r\n    const avatar = authedUser ? users[authedUser].avatarURL : 'placeholder.jpg';\r\n\r\n    return (\r\n        <nav className='nav'>\r\n            <ul>\r\n                <li>\r\n                    <NavLink to='/' exact activeClassName='active'>\r\n                        Home\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/add' exact  activeClassName='active'>\r\n                        Create Question\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/leaderboard' exact  activeClassName='active'>\r\n                        Leader Board\r\n                    </NavLink>\r\n                </li>\r\n                {\r\n                loggedIn\r\n                ? <li>\r\n                    <div className='nav-user'>\r\n                        {authedUser}\r\n                        <img  \r\n                            src={avatar}\r\n                            alt={`Avatar of ${authedUser}`}\r\n                            className='nav-avatar'\r\n                        />\r\n                    </div>\r\n                    <NavLink to='/login' exact activeClassName='active'>\r\n                        logout\r\n                    </NavLink>\r\n                </li>\r\n                :<li>\r\n                    <NavLink to='/login' exact activeClassName='active'>\r\n                        Login\r\n                    </NavLink>\r\n                </li> \r\n                }\r\n            </ul>\r\n        </nav>\r\n    );\r\n   }\r\n\r\nfunction mapStateToProps ({ authedUser, users }) {\r\n    return {\r\n      authedUser,\r\n      users,\r\n      loggedIn: authedUser !== null\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, null, null, { pure: false })(Nav)","import React from 'react';\r\nimport { Route, Redirect, withRouter } from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({ component: Component, ...rest }) {\r\n  const prevLocation = rest.location.pathname;\r\n\r\n  return (\r\n    <Route {...rest} render={function(props) {\r\n      return (\r\n        rest.loggedIn\r\n        ? <Component {...props} />\r\n        : <Redirect to={{\r\n            pathname: '/login',\r\n            state: prevLocation\r\n          }} />\r\n      )}\r\n    } />\r\n  );\r\n}\r\n\r\nexport default withRouter(ProtectedRoute);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3 className='center'>404 / Not Found</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n  return {\r\n    users,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(NotFound)","import React, { Component, Fragment } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { handleInitialData } from '../actions/shared'\nimport Login from './Login'\nimport Dashboard from './Dashboard'\nimport QuestionPage from './QuestionPage'\nimport CreateQuestion from './CreateQuestion'\nimport LeaderBoard from './LeaderBoard'\nimport Nav from './Nav'\nimport ProtectedRoute from '../utils/ProtectedRoute';\nimport NotFound from './NotFound'\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(handleInitialData())\n  }\n  render() {\n    const { loggedIn } = this.props;\n    \n    return (\n      <Router>\n        <Fragment>\n          <div className='container'>\n            <Nav />\n              <div>\n                <Switch>\n                  <ProtectedRoute path='/' exact component={Dashboard} loggedIn={loggedIn} />\n                  <ProtectedRoute path='/leaderboard' component={LeaderBoard} loggedIn={loggedIn} />\n                  <ProtectedRoute path='/add' component={CreateQuestion} loggedIn={loggedIn} />\n                  <ProtectedRoute path='/questions/:id' exact component={QuestionPage} loggedIn={loggedIn} />\n                  <Route path='/login' exact component={Login} />\n                  <Route component={NotFound} />\n                </Switch>\n              </div>\n          </div>\n        </Fragment>\n      </Router>\n    )\n  }\n}\n\nfunction mapStateToProps ({ authedUser }) {\n  return {\n    loggedIn: authedUser !== null,\n  }\n}\n\nexport default connect(mapStateToProps)(App)","import { combineReducers } from 'redux'\r\nimport authedUser from './authedUser'\r\nimport questions from './questions'\r\nimport users from './users'\r\nimport { loadingBarReducer } from 'react-redux-loading-bar'\r\n\r\nexport default combineReducers({\r\n  authedUser,\r\n  users,\r\n  questions,\r\n  loadingBar: loadingBarReducer,\r\n})","import { SET_AUTHED_USER, CLEAR_AUTHED_USER } from '../actions/authedUser'\r\n\r\nexport default function authedUser (state = null, action) {\r\n  switch (action.type) {\r\n    case SET_AUTHED_USER :\r\n      return action.id;\r\n    case CLEAR_AUTHED_USER:\r\n      return null;\r\n    default :\r\n      return state\r\n  }\r\n}","import { RECEIVE_USERS } from '../actions/users'\r\nimport { SAVE_QUESTION_ANSWER, SAVE_QUESTION } from '../actions/questions'\r\n\r\nexport default function users (state = {}, action) {\r\n  switch(action.type) {\r\n    case RECEIVE_USERS :\r\n      return {\r\n        ...state,\r\n        ...action.users\r\n      }\r\n      case SAVE_QUESTION:\r\n      return {\r\n        ...state,\r\n        [action.question.author]: {\r\n          ...state[action.question.author],\r\n          questions: state[action.question.author].questions.concat([\r\n            action.question.id,\r\n          ]),\r\n        },\r\n      };\r\n    case SAVE_QUESTION_ANSWER:\r\n      return {\r\n        ...state,\r\n        [action.authedUser]: {\r\n          ...state[action.authedUser],\r\n          answers: {\r\n            ...state[action.authedUser].answers,\r\n            [action.qid]: action.answer,\r\n          },\r\n        },\r\n      };\r\n    default :\r\n      return state\r\n  }\r\n}","import { RECEIVE_QUESTIONS, SAVE_QUESTION_ANSWER, SAVE_QUESTION } from '../actions/questions'\r\n\r\nexport default function questions (state = {}, action) {\r\n  switch(action.type) {\r\n    case RECEIVE_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        ...action.questions,\r\n      };\r\n    case SAVE_QUESTION_ANSWER :\r\n        \r\n      return {\r\n        ...state,\r\n        [action.qid]: {\r\n          ...state[action.qid],\r\n          [action.answer]: {\r\n            ...state[action.qid][action.answer],\r\n            votes: state[action.qid][action.answer].votes.concat(action.authedUser),\r\n          },\r\n        },\r\n      }\r\n    case SAVE_QUESTION :\r\n        const { question } = action\r\n\r\n      return {\r\n        ...state,\r\n            [question.id]: question\r\n      };\r\n    default :\r\n      return state;\r\n  }\r\n}","const logger = (store) => (next) => (action) => {\r\n    console.group(action.type)\r\n      console.log('The action: ', action)\r\n      const returnValue = next(action)\r\n      console.log('The new state: ', store.getState())\r\n    console.groupEnd()\r\n    return returnValue\r\n  }\r\n  \r\n  export default logger","import checker from './checker';\r\nimport thunk from 'redux-thunk'\r\nimport logger from './logger'\r\nimport { applyMiddleware } from 'redux'\r\n\r\nexport default applyMiddleware(\r\n  thunk,\r\n  checker,\r\n  logger,\r\n)","import { SAVE_QUESTION_ANSWER } from '../actions/questions';\r\n\r\nexport default function checker(store) {\r\n  return function(next) {\r\n    return function(action) {\r\n      if (action.type === SAVE_QUESTION_ANSWER) {\r\n        const users = store.getState().users;\r\n        const answers = Object.keys(users[action.authedUser].answers);\r\n        if (answers.indexOf(action.qid) > -1) {\r\n          return alert('You can only answer a question once.');\r\n        }\r\n      }\r\n      return next(action);\r\n    }\r\n  };\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reducer from './reducers';\nimport middleware from './middleware';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}